Group {
 name PBlur1
 tile_color 0xcc7f4dff
 label "\[value size]"
 selected true
 xpos -260
 ypos 645
 addUserKnob {20 PBlur}
 addUserKnob {41 "Local GPU: " T BlinkScript5.gpuName}
 addUserKnob {41 "Use GPU if Available" T BlinkScript5.useGPUIfAvailable}
 addUserKnob {26 ""}
 addUserKnob {41 channel l "position channel" T Shuffle1.in}
 addUserKnob {26 ""}
 addUserKnob {41 size T BlinkScript5.PBlur_size}
 addUserKnob {7 falloff l "falloff softness"}
 falloff 1
 addUserKnob {4 power l "falloff power" M {linear quadratic cubic quartic}}
 addUserKnob {26 ""}
 addUserKnob {41 ratio t "Screen space to world space ratio used for efficiency reasons. This is the largest number of pixels visible in a one unit radius in 3D space" T BlinkScript5.PBlur_ratio}
 addUserKnob {26 credits l "" +STARTLINE T "PBlur v1.0 | Oliver Daniels 2025"}
 addUserKnob {26 website l "" +STARTLINE T "<b><font color=#ffffff><a href=\"http://www.oliverdaniels.net\"><span style=\"color:#C8C8C8;\">oliverdaniels.net</span></a><b>"}
}
 Input {
  inputs 0
  name src
  xpos -150
  ypos 519
 }
set Nb2aff800 [stack 0]
 Shuffle {
  in P
  name Shuffle1
  xpos -260
  ypos 563
 }
 Dot {
  name Dot1
  xpos -226
  ypos 610
 }
push $Nb2aff800
 BlinkScript {
  inputs 2
  recompileCount 57
  ProgramGroup 1
  kernelSource "\nkernel PBlur : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRanged2D, eEdgeClamped> src; // rgb input\n  Image<eRead, eAccessRanged2D, eEdgeClamped> P; // position input\n  Image<eWrite> dst; // output image\n\n  param:\n    float size;\n    float falloff;\n    int ratio;\n    float power;\n\n  local:\n    int _filterSize;\n\n  void define() \{\n    defineParam(size, \"size\", 5.0f);\n    defineParam(falloff, \"falloff\", 1.0f);\n    defineParam(power, \"power\", 1.0f);\n  \}\n\n  void init() \{\n    _filterSize = ceil(size*ratio);\n    src.setRange(-_filterSize, -_filterSize, _filterSize, _filterSize);\n    P.setRange(-_filterSize, -_filterSize, _filterSize, _filterSize);  \n  \}\n\n  void process(int2 pos) \{\n\n    SampleType(src) valueSum(0);\n    ValueType(src) filterSum(0);\n    \n\n    for (int j = -_filterSize; j < _filterSize; j++) \{\n      for (int i = -_filterSize; i < _filterSize; i++) \{\n        SampleType(src) subVal(0);\n        if( i == 0 && j == 0 ) \{\n          valueSum += src(0, 0);\n          filterSum += 1;\n        \} else if (pos.x+i >= src.bounds.x1 && pos.x+i <= src.bounds.x2 && pos.y+j >= src.bounds.y1 && pos.y+j <= src.bounds.y2) \{\n          float hypot = sqrt(pow(P(i, j, 0)-P(0, 0, 0), 2) + pow(P(i, j, 1)-P(0, 0, 1), 2) + pow(P(i, j, 2)-P(0, 0, 2), 2));\n          if( hypot <= size ) \{\n            float strength = pow(clamp((1.0f - clamp(hypot/size, 0.0f, 1.0f))/falloff, 0.0f, 1.0f), power);\n            valueSum += src(i, j)*strength;\n            filterSum += 1*strength;\n          \}\n        \}\n      \}\n    \}\n\n    valueSum /= filterSum;\n\n    dst() = valueSum;\n  \}\n\};"
  rebuild ""
  PBlur_size 1
  PBlur_falloff {{parent.falloff}}
  PBlur_ratio 20
  PBlur_power {{parent.power+1}}
  rebuild_finalise ""
  name BlinkScript5
  selected true
  xpos -150
  ypos 601
 }
 Output {
  name Output1
  xpos -150
  ypos 695
 }
end_group